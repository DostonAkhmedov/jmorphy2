description = 'Jmorphy2 plugin for ElasticSearch'

ext {
    pluginName = 'analysis-jmorphy2'
    pluginMetadataDir = 'plugin-metadata'
    pluginMetadataProperties = 'plugin-descriptor.properties'
    dependenciesDir = "${buildDir}/dependencies"
}

dependencies {
    compile "org.elasticsearch:elasticsearch:$elasticsearchVersion"
    testCompile "org.apache.lucene:lucene-test-framework:$luceneVersion"
    testCompile "org.elasticsearch:elasticsearch:$elasticsearchVersion:tests"
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.carrotsearch.randomizedtesting:randomizedtesting-runner:2.1.16'

    compile project(':jmorphy2-lucene')
    testCompile project(':jmorphy2-core').sourceSets.test.output
}

processTestResources << {
    copy {
        from "${project(':jmorphy2-core').sourceSets['test'].output.resourcesDir}/pymorphy2_dicts"
        into "${sourceSets['test'].output.resourcesDir}/indices/analyze/config/jmorphy2/ru/pymorphy2_dicts"
    }
}

task copyDependencies(type: Copy) {
    from configurations.runtime
    into dependenciesDir
    include 'dawg-*.jar', 'jmorphy2-core-*.jar', 'jmorphy2-nlp-*.jar', 'jmorphy2-lucene-*.jar', 'noggit-*.jar', 'commons-io-*.jar', 'commons-codec-*.jar'
}

task processPluginMetadata(type: Copy) {
    def tokens = [
        description: project.description,
        version: project.version,
        pluginName: pluginName,
        elasticsearchVersion: elasticsearchVersion
    ]
    def engine = new groovy.text.GStringTemplateEngine()

    from "${pluginMetadataDir}/${pluginMetadataProperties}"
    into "${buildDir}/${pluginMetadataDir}/"
    filter {
        engine.createTemplate(it).make(tokens).toString()
    }
}
processPluginMetadata.outputs.upToDateWhen { false }

task buildZip(type: Zip) {
    from jar
    from dependenciesDir
    from "${buildDir}/${pluginMetadataDir}/${pluginMetadataProperties}"
}

build.dependsOn buildZip
buildZip.dependsOn copyDependencies
buildZip.dependsOn processPluginMetadata
